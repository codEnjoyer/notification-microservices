name: notifications-backend
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8000:8000"
    # noinspection ComposeUnknownKeys
    develop:
      # Create a `watch` configuration to update the appl
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: ./api
          target: /app
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          ignore:
            - .venv/

        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17.2
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
      PGTZ: UTC
    ports:
      - ${DB_PORT}:${DB_PORT}
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'" ]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data/

volumes:
  postgres_data:
